substitutions:
  device_name: test
  friendly_name: test

esphome:
  name: ${device_name}

esp8266:
  board: d1_mini

logger:
  level: INFO

api:

ota:
- platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  power_save_mode: high
  manual_ip:
    static_ip: XXX.XXX.XXX.XXX
    gateway: XXX.XXX.XXX.XXX
    subnet: XXX.XXX.XXX.XXX

## Battery State

sensor:
  - platform: adc
    pin: A0
    name: "Voltage"
    entity_category: diagnostic
    unit_of_measurement: "V"  
    device_class: battery
    update_interval: 3s
    accuracy_decimals: 3
    filters:
      - multiply: 5.138
    id: battery_$device_name
    icon: mdi:lightning-bolt
  
  - platform: template
    name: "Battery Percentage"
    entity_category: diagnostic
    unit_of_measurement: "%"  
    device_class: battery
    update_interval: 3s
    accuracy_decimals: 0
    lambda: |-
      return ((id(battery_$device_name).state-3) /1.2 * 100.00);

## Deep Sleep

deep_sleep:
  id: deep_sleep_component
  run_duration: 30s
  sleep_duration: 10min


binary_sensor:
  - platform: homeassistant
    entity_id: input_boolean.prevent_deep_sleep
    id: prevent_deep_sleep
    on_state:
      then:
        - lambda: |-
            if (id(prevent_deep_sleep).state) {
              // Prevent deep sleep if the input_boolean is on
              ESP_LOGI("main", "Deep sleep prevented by Home Assistant input_boolean.");
              id(deep_sleep_component).prevent_deep_sleep();
            } else {
              // Allow deep sleep if the input_boolean is off
              ESP_LOGI("main", "Allowing deep sleep...");
              id(deep_sleep_component).allow_deep_sleep();
            }

